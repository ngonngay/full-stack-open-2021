{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newPhone","post","id","delete","put","Filter","handleFilter","value","onChange","PersonForm","handleSubmit","setNewName","setNewNumber","newName","newNumber","onSubmit","required","type","Notification","message","className","App","useState","persons","setPersons","filter","setFilter","setMessage","useEffect","personsService","then","response","console","log","data","phones","catch","error","e","target","preventDefault","map","name","includes","trim","checkExist","update","window","confirm","updateId","forEach","person","number","succeed","setTimeout","savedPhone","concat","toUpperCase","onClick","deleted","handleDelete","nanoid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.539b9e1d.chunk.js","sourcesContent":["import axios from 'axios';\r\n// const baseUrl = 'http://localhost:3001/api/persons';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n\treturn axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newPhone) => {\r\n\treturn axios.post(`${baseUrl}/create`, newPhone);\r\n};\r\n\r\nconst replace = (id, newPhone) => {\r\n\treturn axios.put(`${baseUrl}/${id}`, newPhone);\r\n};\r\nconst deleted = (id) => {\r\n\treturn axios.delete(`${baseUrl}/${id}`);\r\n};\r\nconst update = (id, newData) => {\r\n\treturn axios.patch(`${baseUrl}/${id}`, newData);\r\n};\r\nexport default {\r\n\tgetAll,\r\n\tcreate,\r\n\tupdate,\r\n\tdeleted,\r\n\treplace,\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport personsService from './services/persons';\nimport { nanoid } from 'nanoid';\nimport './index.css';\n\nconst Filter = ({ handleFilter, value }) => {\n\treturn (\n\t\t<div>\n\t\t\tfilter show with <input onChange={handleFilter} value={value} />\n\t\t</div>\n\t);\n};\nconst PersonForm = ({ handleSubmit, setNewName, setNewNumber, newName, newNumber }) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<div>\n\t\t\t\tname:\n\t\t\t\t<input onChange={setNewName} value={newName} required />\n\t\t\t\t<div>\n\t\t\t\t\tnumber:\n\t\t\t\t\t<input onChange={setNewNumber} value={newNumber} required />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type='submit'>add</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\nconst Notification = ({ message }) => {\n\tif (message.message === null) {\n\t\treturn null;\n\t}\n\n\treturn <div className={message.type}>{message.message}</div>;\n};\nconst App = () => {\n\tconst [persons, setPersons] = useState([]);\n\tconst [newName, setNewName] = useState('');\n\tconst [newNumber, setNewNumber] = useState('');\n\tconst [filter, setFilter] = useState('');\n\tconst [message, setMessage] = useState({ message: null });\n\tuseEffect(() => {\n\t\tpersonsService\n\t\t\t.getAll()\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data.phones);\n\t\t\t\tsetPersons(response.data.phones);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}, []);\n\tconst checkExist = (persons, newName) => {\n\t\t//console.log(persons.map((persons) => persons.name).includes(newName));\n\t\treturn persons.map((persons) => persons.name).includes(newName.trim());\n\t};\n\tconst handleDelete = (id, name) => {\n\t\tlet deleted = window.confirm('Are you sure you want to delete this?');\n\t\tconsole.log(id);\n\t\tif (deleted) {\n\t\t\tpersonsService\n\t\t\t\t.deleted(id)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t//console.log(response);\n\t\t\t\t\tif (response.data.succeed) {\n\t\t\t\t\t\tpersonsService.getAll().then((response) => {\n\t\t\t\t\t\t\tsetPersons(response.data.phones);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetMessage({\n\t\t\t\t\t\t\tmessage: `Deleted ${name}`,\n\t\t\t\t\t\t\ttype: 'succeed',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetMessage({ message: null });\n\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tsetMessage({\n\t\t\t\t\t\tmessage: `${error}`,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetMessage({ message: null });\n\t\t\t\t\t}, 5000);\n\t\t\t\t});\n\t\t}\n\t};\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (!checkExist(persons, newName)) {\n\t\t\tpersonsService\n\t\t\t\t.create({ name: newName.trim(), number: newNumber.trim() })\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tconsole.log(response.data.savedPhone.id);\n\t\t\t\t\tsetPersons(\n\t\t\t\t\t\tpersons.concat({\n\t\t\t\t\t\t\tid: response.data.savedPhone.id,\n\t\t\t\t\t\t\tname: newName.trim(),\n\t\t\t\t\t\t\tnumber: newNumber,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tsetMessage({\n\t\t\t\t\t\tmessage: `Added ${newName}`,\n\t\t\t\t\t\ttype: 'succeed',\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetMessage({ message: null });\n\t\t\t\t\t}, 5000);\n\t\t\t\t\tsetNewName('');\n\t\t\t\t\tsetNewNumber('');\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log({ error });\n\t\t\t\t\tsetMessage({\n\t\t\t\t\t\tmessage: `$error`,\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t} else {\n\t\t\tlet update = window.confirm(\n\t\t\t\t`${newName} is already added to phonebook,replace the old number with the new one?`,\n\t\t\t);\n\t\t\tlet updateId = -1;\n\t\t\tif (update) {\n\t\t\t\tpersons.forEach((person) => {\n\t\t\t\t\tif (person.name === newName) {\n\t\t\t\t\t\tupdateId = person.id;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (updateId != -1) {\n\t\t\t\t\tconsole.log(updateId);\n\t\t\t\t\tpersonsService\n\t\t\t\t\t\t.replace(updateId, {\n\t\t\t\t\t\t\tname: newName.trim(),\n\t\t\t\t\t\t\tnumber: newNumber.trim(),\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tif (response.data.succeed) {\n\t\t\t\t\t\t\t\tsetMessage({\n\t\t\t\t\t\t\t\t\tmessage: `Updated number for ${newName}`,\n\t\t\t\t\t\t\t\t\ttype: 'succeed',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\tsetMessage({\n\t\t\t\t\t\t\t\t\t\tmessage: null,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}, 5000);\n\t\t\t\t\t\t\t\tsetNewName('');\n\t\t\t\t\t\t\t\tsetNewNumber('');\n\t\t\t\t\t\t\t\tpersonsService\n\t\t\t\t\t\t\t\t\t.getAll()\n\t\t\t\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t\t\t\tsetPersons(\n\t\t\t\t\t\t\t\t\t\t\tresponse\n\t\t\t\t\t\t\t\t\t\t\t\t.data\n\t\t\t\t\t\t\t\t\t\t\t\t.phones,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t\t\t\t\tsetMessage({\n\t\t\t\t\t\t\t\t\tmessage: `Updated number for ${newName} failed! Try again or refresh the page`,\n\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification message={message} />\n\t\t\t<Filter handleFilter={(e) => setFilter(e.target.value)} value={filter} />\n\t\t\t<h1>Add a new phone</h1>\n\t\t\t<PersonForm\n\t\t\t\thandleSubmit={(e) => handleSubmit(e)}\n\t\t\t\tsetNewName={(e) => setNewName(e.target.value)}\n\t\t\t\tsetNewNumber={(e) => setNewNumber(e.target.value)}\n\t\t\t\tnewName={newName}\n\t\t\t\tnewNumber={newNumber}\n\t\t\t/>\n\n\t\t\t<h2>Numbers</h2>\n\t\t\t{persons\n\t\t\t\t.filter((person) =>\n\t\t\t\t\tperson.name.toUpperCase().includes(filter.toUpperCase()),\n\t\t\t\t)\n\t\t\t\t.map((person) => (\n\t\t\t\t\t<p key={nanoid()}>\n\t\t\t\t\t\t{`${person.name}  ${person.number}`}{' '}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\thandleDelete(person.id, person.name)\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</button>{' '}\n\t\t\t\t\t</p>\n\t\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}